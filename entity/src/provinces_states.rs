//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use sea_orm::entity::prelude::*;
use serde::{
    Deserialize,
    Serialize,
};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "provinces_states")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id:                i32,
    pub name:              String,
    pub country_region_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::countries_regions::Entity",
        from = "Column::CountryRegionId",
        to = "super::countries_regions::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    CountriesRegions,
}

impl Related<super::countries_regions::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CountriesRegions.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
