//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use sea_orm::entity::prelude::*;
use serde::{
    Deserialize,
    Serialize,
};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "countries_regions")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id:   i32,
    pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::provinces_states::Entity")]
    ProvincesStates,
}

impl Related<super::provinces_states::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ProvincesStates.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
